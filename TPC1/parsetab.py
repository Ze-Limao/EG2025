
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOT LBRACKET MINUS NUM PLUS RBRACKET SEMICOLONSentence : Signal Intervals DOTSignal : PLUSSignal : MINUSIntervals : Interval RemainingIntervalsRemainingIntervals :RemainingIntervals : Interval RemainingIntervalsInterval : LBRACKET NUM SEMICOLON NUM RBRACKET'
    
_lr_action_items = {'PLUS':([0,],[3,]),'MINUS':([0,],[4,]),'$end':([1,8,],[0,-1,]),'LBRACKET':([2,3,4,6,9,15,],[7,-2,-3,7,7,-7,]),'DOT':([5,6,9,10,12,15,],[8,-5,-5,-4,-6,-7,]),'NUM':([7,13,],[11,14,]),'SEMICOLON':([11,],[13,]),'RBRACKET':([14,],[15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Sentence':([0,],[1,]),'Signal':([0,],[2,]),'Intervals':([2,],[5,]),'Interval':([2,6,9,],[6,9,9,]),'RemainingIntervals':([6,9,],[10,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Sentence","S'",1,None,None,None),
  ('Sentence -> Signal Intervals DOT','Sentence',3,'p_sentence','ex1.py',58),
  ('Signal -> PLUS','Signal',1,'p_signal_plus','ex1.py',62),
  ('Signal -> MINUS','Signal',1,'p_signal_minus','ex1.py',66),
  ('Intervals -> Interval RemainingIntervals','Intervals',2,'p_intervals','ex1.py',70),
  ('RemainingIntervals -> <empty>','RemainingIntervals',0,'p_remaining_intervals_empty','ex1.py',74),
  ('RemainingIntervals -> Interval RemainingIntervals','RemainingIntervals',2,'p_remaining_intervals','ex1.py',78),
  ('Interval -> LBRACKET NUM SEMICOLON NUM RBRACKET','Interval',5,'p_interval','ex1.py',82),
]
